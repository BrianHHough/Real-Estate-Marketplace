{
  "contractName": "Counters",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.1+commit.c8a2cb62\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath} overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.\",\"methods\":{},\"title\":\"Counters\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/interstellarx/Documents/GitHub/Real-Estate-Marketplace/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol\":\"Counters\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/interstellarx/Documents/GitHub/Real-Estate-Marketplace/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x2f09e9f61f77010652e09a5a8d75d68bcf8a11623f8889c1c0514926880e0a90\",\"urls\":[\"bzzr://7ee0fc6c90afe3fe4b63f5fe54fea1cd5ece2d7ae360bfe43bc24f0bc560106a\"]},\"/Users/interstellarx/Documents/GitHub/Real-Estate-Marketplace/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x2406bc5678ddc40f5462fde4ed8929368aa3f1540c0c6acef7046bc6cd3e82e1\",\"urls\":[\"bzzr://c05b02a18116e509788f01e6a6661a7dc3c33005b50f0eb51c11cc7ce4907978\"]}},\"version\":1}",
  "bytecode": "0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058204db6809382c28267311e736c7aad6d07b436ea378fffd35bed358a9633df76b40029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058204db6809382c28267311e736c7aad6d07b436ea378fffd35bed358a9633df76b40029",
  "sourceMap": "630:848:5:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "630:848:5:-;;;;;;;;",
  "source": "pragma solidity >=0.5.0;\n\nimport \"../math/SafeMath.sol\";\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n * directly accessed.\n */\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}\n",
  "sourcePath": "/Users/interstellarx/Documents/GitHub/Real-Estate-Marketplace/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
  "ast": {
    "absolutePath": "/Users/interstellarx/Documents/GitHub/Real-Estate-Marketplace/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        10308
      ]
    },
    "id": 10309,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10261,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/Users/interstellarx/Documents/GitHub/Real-Estate-Marketplace/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 10262,
        "nodeType": "ImportDirective",
        "scope": 10309,
        "sourceUnit": 10496,
        "src": "26:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.",
        "fullyImplemented": true,
        "id": 10308,
        "linearizedBaseContracts": [
          10308
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10265,
            "libraryName": {
              "contractScope": null,
              "id": 10263,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10495,
              "src": "659:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$10495",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "653:27:5",
            "typeName": {
              "id": 10264,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "672:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 10268,
            "members": [
              {
                "constant": false,
                "id": 10267,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "scope": 10268,
                "src": "1025:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10266,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1025:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 10308,
            "src": "686:374:5",
            "visibility": "public"
          },
          {
            "body": {
              "id": 10278,
              "nodeType": "Block",
              "src": "1140:38:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 10275,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10270,
                      "src": "1157:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 10276,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10267,
                    "src": "1157:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10274,
                  "id": 10277,
                  "nodeType": "Return",
                  "src": "1150:21:5"
                }
              ]
            },
            "documentation": null,
            "id": 10279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10270,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 10279,
                  "src": "1083:23:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10269,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10268,
                    "src": "1083:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1082:25:5"
            },
            "returnParameters": {
              "id": 10274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10273,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10279,
                  "src": "1131:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1131:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1130:9:5"
            },
            "scope": 10308,
            "src": "1066:112:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10290,
              "nodeType": "Block",
              "src": "1237:125:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 10284,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10281,
                        "src": "1336:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 10286,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10267,
                      "src": "1336:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 10287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1354:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1336:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10289,
                  "nodeType": "ExpressionStatement",
                  "src": "1336:19:5"
                }
              ]
            },
            "documentation": null,
            "id": 10291,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10281,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 10291,
                  "src": "1203:23:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10280,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10268,
                    "src": "1203:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1202:25:5"
            },
            "returnParameters": {
              "id": 10283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1237:0:5"
            },
            "scope": 10308,
            "src": "1184:178:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10306,
              "nodeType": "Block",
              "src": "1421:55:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 10296,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10293,
                        "src": "1431:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 10298,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10267,
                      "src": "1431:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 10302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1467:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 10299,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10293,
                            "src": "1448:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 10300,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10267,
                          "src": "1448:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10351,
                        "src": "1448:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1448:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1431:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10305,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:38:5"
                }
              ]
            },
            "documentation": null,
            "id": 10307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10293,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 10307,
                  "src": "1387:23:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10292,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10268,
                    "src": "1387:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1386:25:5"
            },
            "returnParameters": {
              "id": 10295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1421:0:5"
            },
            "scope": 10308,
            "src": "1368:108:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 10309,
        "src": "630:848:5"
      }
    ],
    "src": "0:1479:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/interstellarx/Documents/GitHub/Real-Estate-Marketplace/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        10308
      ]
    },
    "id": 10309,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10261,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/Users/interstellarx/Documents/GitHub/Real-Estate-Marketplace/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 10262,
        "nodeType": "ImportDirective",
        "scope": 10309,
        "sourceUnit": 10496,
        "src": "26:30:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.",
        "fullyImplemented": true,
        "id": 10308,
        "linearizedBaseContracts": [
          10308
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10265,
            "libraryName": {
              "contractScope": null,
              "id": 10263,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10495,
              "src": "659:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$10495",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "653:27:5",
            "typeName": {
              "id": 10264,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "672:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 10268,
            "members": [
              {
                "constant": false,
                "id": 10267,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "scope": 10268,
                "src": "1025:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10266,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1025:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 10308,
            "src": "686:374:5",
            "visibility": "public"
          },
          {
            "body": {
              "id": 10278,
              "nodeType": "Block",
              "src": "1140:38:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 10275,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10270,
                      "src": "1157:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 10276,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10267,
                    "src": "1157:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10274,
                  "id": 10277,
                  "nodeType": "Return",
                  "src": "1150:21:5"
                }
              ]
            },
            "documentation": null,
            "id": 10279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10270,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 10279,
                  "src": "1083:23:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10269,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10268,
                    "src": "1083:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1082:25:5"
            },
            "returnParameters": {
              "id": 10274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10273,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10279,
                  "src": "1131:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1131:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1130:9:5"
            },
            "scope": 10308,
            "src": "1066:112:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10290,
              "nodeType": "Block",
              "src": "1237:125:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 10284,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10281,
                        "src": "1336:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 10286,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10267,
                      "src": "1336:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 10287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1354:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1336:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10289,
                  "nodeType": "ExpressionStatement",
                  "src": "1336:19:5"
                }
              ]
            },
            "documentation": null,
            "id": 10291,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10281,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 10291,
                  "src": "1203:23:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10280,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10268,
                    "src": "1203:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1202:25:5"
            },
            "returnParameters": {
              "id": 10283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1237:0:5"
            },
            "scope": 10308,
            "src": "1184:178:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10306,
              "nodeType": "Block",
              "src": "1421:55:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 10296,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10293,
                        "src": "1431:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 10298,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10267,
                      "src": "1431:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 10302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1467:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 10299,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10293,
                            "src": "1448:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 10300,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10267,
                          "src": "1448:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10351,
                        "src": "1448:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 10303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1448:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1431:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10305,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:38:5"
                }
              ]
            },
            "documentation": null,
            "id": 10307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10293,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 10307,
                  "src": "1387:23:5",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 10292,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10268,
                    "src": "1387:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$10268_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1386:25:5"
            },
            "returnParameters": {
              "id": 10295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1421:0:5"
            },
            "scope": 10308,
            "src": "1368:108:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 10309,
        "src": "630:848:5"
      }
    ],
    "src": "0:1479:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-06-29T12:00:00.962Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath} overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.",
    "methods": {},
    "title": "Counters"
  },
  "userdoc": {
    "methods": {}
  }
}